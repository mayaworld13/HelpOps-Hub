on:
  push:
    branches:
      - main
    paths:
      - 'website3.0/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Current Version
        id: versioning
        run: |
          if [ -f version.txt ]; then
            VERSION=$(cat version.txt)
          else
            VERSION=v0
          fi
          NEW_VERSION="v$(( ${VERSION//[!0-9]/} + 1 ))"
          echo "$NEW_VERSION" > version.txt
          echo "VERSION=$NEW_VERSION" >> "$GITHUB_ENV"

      - name: Commit Updated Version
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add version.txt
          git commit -m "Bump version to $NEW_VERSION"
          
          git push origin main || echo "No changes to commit."

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/helpops:${{ env.VERSION }} ./website3.0
          docker push ${{ secrets.DOCKER_USERNAME }}/helpops:${{ env.VERSION }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy on k3s
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

        run: |
          echo "${SSH_PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem shellscript.sh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~

          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            if [ -f "/tmp/shellscript_executed" ]; then
              echo "✅ shellscript.sh already executed. Skipping..."
            else
              chmod +x shellscript.sh
              ./shellscript.sh
              touch /tmp/shellscript_executed
              echo "✅ shellscript.sh executed successfully."
            fi
          EOF

      - name: Get Latest Version
        run: echo "VERSION=$(cat version.txt)" >> "$GITHUB_ENV"

      - name: Update Image Tag in Deployment
        run: |
          sed -i "s|image: mayaworld13/helpops:.*|image: mayaworld13/helpops:${{ env.VERSION }}|" k8s/deployment.yml
          git add k8s/deployment.yml
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git commit -m "Update deployment image to version ${{ env.VERSION }}"
          git pull origin main --rebase
          git push origin main

      - name: Set Kubeconfig Path and Apply Kubernetes Deployment
        env:
          KUBECONFIG: "/home/ubuntu/.kube/config"  # Adjust if necessary
        run: |
          scp -o StrictHostKeyChecking=no -i private_key.pem k8s/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            export KUBECONFIG=/home/ubuntu/.kube/config  # Make sure this is the correct path
            
            kubectl apply -f deployment.yml
          EOF
